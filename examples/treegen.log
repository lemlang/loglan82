BLOCK
(* GENERATES A LANGUAGE DEFINED BY AN EXPRESSION IN THE FORM OF A TREE*)
 
 
 
  UNIT NODE:COROUTINE;
  VAR B:BOOL; (* IT IS LANGUAGE EXHAUSTION MARK *)
  BEGIN
    RETURN
  END NODE;
 
  UNIT PAIR:NODE CLASS(L,R:NODE);
  END PAIR;  (* WE WILL USE 2 ARGUMENT OPERATORS IN EXPRESSION *)
 
  UNIT SUM:PAIR CLASS; (* SET THEORETICAL JOIN OF LANGUAGES *)
  VAR M: INTEGER;
  BEGIN
    DO
      M:=I;
      (* I IS THE POSITION OF THE LAST GENERATED LETTER                    *)
      (* M IS THE POSITION OF BEGINNING OF WORDS GENERATED BY THIS NODE    *)
      (*      IN THE WORD CURRENTLY GENERATED BY A WHOLE TREE              *)
      DO
        ATTACH(L);
        IF L.B THEN EXIT FI;
        DETACH; I:=M  (* RESTART WORD GENERATION *)
      OD;
      L.B:=FALSE;  (* RESTART LANGUAGE L *)
      DO
        DETACH;  I:=M;  (* RESTART WORD GENERATION *)
        ATTACH(R);
        IF R.B THEN EXIT FI;
      OD;
      R.B:=FALSE;  (* RESTART LANGUAGE R *)
      B:=TRUE;
      DETACH;
    OD;
  END SUM;
 
 
  UNIT CON:PAIR CLASS;
  VAR N,M:INTEGER;
  BEGIN
    DO
      M:=I; (*BEGIN OF THE FIRST LANGUAGE WORD POSITION *)
      DO
        ATTACH(L);
        N:=I; (* BEGIN OF THE SECOND LANGUAGE WORD POSITION *)
        DO
          ATTACH(R);
          IF R.B THEN IF L.B THEN EXIT EXIT ELSE EXIT FI FI;
          DETACH; I:=N (* RESTART LANGUAGE R WORD GENERATION POSITION *)
        OD;
        R.B:=FALSE; (* RESTART LANGUAGE R *)
        DETACH; I:=M (* RESTART LANGUAGE L WORD GENERATION POSITION *)
      OD;
      R.B,L.B:=FALSE; B:=TRUE; DETACH
    OD;
  END CON;
 
 
  UNIT LEAF:NODE CLASS(C:CHAR);
  (* ATOM LANGUAGES ARE SIMPLY LETTERS *)
  BEGIN
    DO
      I:=I+1; (* UPDATE POSITION POINTER *)
      WORD(I):=C;
      B:=TRUE;
      DETACH
    OD
  END LEAF;
 
 
  VAR A,B,C,D,E,W,V:NODE,I,J,N,M:INTEGER;
            (* I - GLOBAL POSITION POINTER FOR ARRAY WORD *)
  VAR L,O,G,II,NN:NODE;
  VAR WORD:ARRAYOF CHAR; (* BUFFER FOR WORDS GENERATION *)
 
  BEGIN
    N:=50; (* DIMENSION FOR ARRAY WORD *)
    WRITELN(" LANGUAGE GENERATOR USING COROUTINES");
    WRITELN(" LANGUAGE IS REPRESENTED AS A TREE WITH OPERATIONS IN NODES");
    WRITELN(" OUR OPERATIONS ARE SET THEORETICAL JOIN AND CONCATENATION OF");
    WRITELN(" LANGUAGES");WRITELN; 
    A:=NEW LEAF('A'); B:=NEW LEAF('B'); C:=NEW LEAF('C');
    D:=NEW LEAF('D'); E:=NEW LEAF('E');
    L:=NEW LEAF('L'); G:=NEW LEAF('G');
    II:=NEW LEAF('I'); NN:=NEW LEAF('N');
    O:=NEW LEAF('O');
    W:=NEW SUM(A,L);
    W:=NEW CON(W,NEW SUM(D,O));
    V:=NEW CON(II,C);
    V:=NEW SUM(V,NEW CON(L,NEW CON(A,NN)));
    V:=NEW CON(G,V);
    V:=NEW SUM(A,V);
    W:=NEW CON(W,V);
    WRITELN(" WE HAVE LANGUAGE DEFINED BY THE FOLLOWING EXPRESSION");
    WRITELN;
    WRITELN(" (A+L)(D+O)(A+G(IC+LAN))"); 
    WRITELN; WRITELN;
    ARRAY WORD DIM(1:N);
    DO
      ATTACH(W);
      WRITE(" ");
      FOR J:=1 TO I
      DO
        WRITE(WORD(J))
      OD;
      WRITELN;
      IF W.B THEN EXIT FI
    OD
  END 
